to configDetails config_Id
	
	#set  test_config_id to "85bedc40-9f8d-4a26-86f0-fcfafb69b813"
	//put "8ffa54ac-0deb-499b-9f65-0acea6374b41" into test_config_id
	put config_Id into test_config_id
	
	RUN "generatingReport/GetAccessToken1"
	put global accessToken into accessToken
	put GetTestconfigTasks().responsebody into Allresponses
	put JSONValue(Allresponses) into testResponse
	#log testResponse
	if [testResponse.items.created_datetime] is between [the long international time-(24 hours)] and [the long international time+(6 hours 30 minutes)] then
		if testResponse.items.runstatus is not "STARTED" then
			log "----------------------------------------------------------------"
			#log testResponse.items.runstatus
			put testResponse.items.runstatus into configRunStatus
			insert configRunStatus into global configRunStatus
			set testResponse.items.runstatus to empty
		end if
	end if
end configDetails



to generateReports
	params config_Id,baseURL,moduleName
	
	#base server URL
	set the suitevariables.baseURL to baseURL
	--	set the ScriptLogging to silent
	put config_Id into global config_Id
	if number of items of global config_Id is greater than 1 then
		set global configName = "Consolidated"
	else
		generateReports1 config_Id,moduleName
		exit handler
	end if
	repeat until allConfigRunStatus is "executed"
		repeat with each item of global config_Id
			configDetails it
		end repeat
		log number of items of global configRunStatus
		log number of items of global config_Id
		if number of items of global configRunStatus is number of items of global config_Id
			generateReports1 global config_Id		
			set allConfigRunStatus = "executed"
		end if
		set configRunStatus=empty
		set global configRunStatus=empty
	end repeat
	set the ScriptLogging to ON
end generateReports


to generateReports1 config_Id,moduleName

	repeat number of items of config_id times
		"generatingReport/getDataFromDAIServer".getInstanceId (item repeatindex() of config_Id)
		"generatingReport/getDataFromDAIServer".getTestCaseNameFromInstance
	end repeat
	log global configName
	put Date into dateStamp
	replace every occurrence of "/" with "" in dateStamp
	put ResourcePath()&"/Reports/"&global configName&"-"&global reportName&"PackReport_"&dateStamp&".xlsx"  into fileName
	if file fileName exists then
		delete file fileName
	end if
	copy file ResourcePath()&"/Reports/SCC_Report.xlsx" to ResourcePath()&"/Reports/"&global configName&"-"&global reportName&"PackReport_"&dateStamp&".xlsx"
	//core.screenSettleDown 2
	"generatingReport/getDataFromDAIServer".reportExcelReading
	"generatingReport/getDataFromDAIServer".deleteDataFromExcel
	"generatingReport/getDataFromDAIServer".initialSetup
	--"generatingReport/getDataFromDAIServer".generateReport
	Run "generatingReport/collectTestResults"
	"generatingReport/getDataFromDAIServer".getErrorScreenWithRunID
	
	"generatingReport/getDataFromDAIServer".reportExcelReading
	put number of records of universal myexceldb into global totalTestcases
	put number of records of universal myexceldb where Status is "FAILED" into global FailedTestCases
	put number of records of universal myexceldb where Status is "PASSED" into global PassedTestCases
	"generatingReport/getDataFromDAIServer".sendEmail moduleName
	
end generateReports1
