
# Scenarios:
--SC2PortalLoginSMI
--S3AccessSMI
--downloadAllSMI
--setPreferencesSMI
--dashboardMenuValidation
-- validationOfAllTheMenusSMI

to readTestData
	Params SheetName
	"SC2_CommonActions/sc2CommonHandlers".setUpScreenShotPath
	set universal data to empty
	#Typetext Enterkey
	wait 0.9
	if imagefound(text:"Logon Legal Notice",waitfor:5,LowResolutionMode:"Yes")
		click [200,300]
		Typetext Enterkey		
	else
		log "Logon Legal Notice not required to this connected SUT"
		
	end if
	repeat 3 times
		click [200,300]
		wait 2
	end repeat
	(*set myExcelDB to {type: "excel",file:ResourcePath("SCC_TestDataFile.xlsx"),name:SheetName,writable:"Yes"} 
	set universal data to the records of myExcelDB where run_Status is "yes"*)
	if ConnectionInfo().Status is "Connected"
		put ConnectionInfo().username into global User_Name
		set global sutID to ConnectionInfo().ServerID
	else
		throw "Error","SUT not connected"
	end if
	split global User_Name by "\"
	put item 2 of global User_Name into global ExcelUserName
	log "User : "&global ExcelUserName
	set global DataFilePath to "C:\AutomationResources\SCC\"&global ExcelUserName&"_SCC_SMI_TestDataFile.xlsx"
	--set global DataFilePath to "C:\AutomationResources\SCC_QA\"&global ExcelUserName&"_SCC_TestDataFile.xlsx"
	set myExcelDB to {type: "excel",file:global DataFilePath,name:SheetName,writable:"Yes"} 
	set universal data to the records of myExcelDB where run_Status is "yes"
	if universal data is empty then 
		logerror " Run Status is -Done No Data found to continue with Next Step"
		exit all
	end if
	"SC2_CommonActions/sc2CommonHandlers".SUTInfo
	if universal data.SC2ApplicationURL is "https://qa.collabportal.keysight.com/login"
		set data.environment to "Test"
	else if  universal data.SC2ApplicationURL is "https://collabportal.keysight.com/login"
		set data.environment to "Prod"
	else
		LogError "Bot is not operating in the correct Environment and Execution type"
		exit all
	end if
	set data.jira_project_name to universal data.Jira_Project_Name
	set data.jira_key to universal data.Jira_Key
	set data.execution_type to universal data.Execution_Type
	log "{ eggplant_data_sync : " &data&"}"
end readTestData

#SC2PortalLoginPORS
to SC2PortalLoginSMI titleofModule
	if ImageFound(text:"Supply Chain Collaboration - SMI",searchRectangle:(screenPartition().SUT.("THTH")))
		LogSuccess "The Application is in the"&&titleofModule
		smartUtil.validate"Supply Chain Collaboration - SMI","THTH"
		set validationList to ["Dashboard"," SMI Menu","Help","Administration","Archive Files","Activate Supplier"]
		smartUtil.listOfValidations "SMI",-500,0,1500,1000,validationList,"THTH"
	else
		LogError"The Application is not in the"&& titleofModule
	end if
	if ImageFound(text:"Organization") and ImageFound(text:"Supplier")
		LogSuccess "The Dashboard Screen have Organization and Supplier filters"
		smartUtil.validate"Organization"
		smartUtil.validate"Supplier"
	else
		LogError"The Dashboard Screen is Blank Selected Preferences and not displayed in the Dashboard"
		
	end if
	
end SC2PortalLoginSMI


to ExcelToolInteractions 
	Params SheetName
	
	set MyExcelFile to Workbook(ResourcePath("dataFile.xlsx"))
	set Sheet to worksheet(MyExcelFile,SheetName)
	put Sheet's cellRange(1) into Headers
	put item 1 of Headers into VariableNames
	put the number of items of item 1 of Headers into HeadersCount
	put Sheet's cellRange(A) into TotalData
	put item 1 of TotalData into totalDataLines
	put the number of items of item 1 of TotalData into totalDataLinesCount
	repeat number of items of totalDataLinesCount
		put Sheet's cellRange(repeatindex()+1) into Lines
		put item 1 of Lines into LinesData
		log LinesData
		log number of items of LinesData
		try
			smartUtil.validateWithoutTry "Wrap"
			typetext controlKey,"f"
			typetext "Trx Type"
			typetext altKey,"f"
			TypeText altKey,f4
		catch
			smartUtil.clickText "Trx Type"
		end try
		repeat repeatindex() times
			typetext downArrow
		end repeat
		repeat with each item of LinesData
			typetext it
			wait 1 tick
			typetext tabKey
		end repeat
	end repeat
	
end ExcelToolInteractions



##S3Access Checking
to S3AccessSMI folderNames,year
	#switch to PORS Module
	if ImageFound(text:"Archive Files",searchRectangle:(screenPartition().SUT.("THTH")))
	smartUtil.clickText"Archive Files","THTH"
		LogSuccess "Successfull Navigated to the Archival_Reports"
		smartUtil.validate"Archival_Reports","HM"
	else
		LogError "Application is not in the Archival_Reports Page"
		Exit all
	end if
	smartUtil.clickText"Archival_Reports","HM"
	repeat with each folderName of folderNames
		smartUtil.setCustomSearchRectangle "Name",18,25,500,450,"HM"
		set the TextStyle to {DPI:250,validWords:folderName,ignoreUnderscores:on}
		if ImageFound(text:folderName,searchRectangle:(screenPartition().SUT.("Custompart")))
			LogSuccess folderName&&"Folder found in the Archival_Reports"
			--set the TextStyle to {DPI:144,validWords:folderName}
			smartUtil.validate folderName,"Custompart"
			smartUtil.clickText folderName,"Custompart"
			set the TextStyle to default
			##Checking  for selected year folder
			if ImageFound(text:the year,searchRectangle:(screenPartition().SUT.("LH")))
				LogSuccess "The"&&folderName&&"Folder has Current year Data"
				
			else
				LogWarning the year&&"Folder is not created in the "&&folderName&&"Folder"
				
			end if
			if ImageFound(text:the year-1)and ImageFound(text:the year-2)
				LogSuccess the year-1&&"and"&&the year-2&&"Folders are avilable in the"&&folderName&&"Folder"
			else
				LogWarning the year-1&&"and"&&the year-2&&"Folders are not  avilable in the"&&folderName&&"Folder"
			end if
			if ImageFound(text:year,searchRectangle:(screenPartition().SUT.("HM")))
				LogSuccess"The"&&year&&"Folder found in the"&&it&&"Folder"
				smartUtil.validate year,"HM"
				smartUtil.clickText year,"HM"
				##Checking for data Files in side the Year folders
				smartUtil.setCustomSearchRectangle "Name",18,25,500,450,"HM"
				Click the RemoteScreenSize*.5 
				wait 1
				set the TextStyle to {DPI:250,validCharacters:folderName,ignoreUnderscores:on,validWords:folderName}
				if ImageFound(text:folderName,searchRectangle:(screenPartition().SUT.("Custompart")))
					LogSuccess folderName&&"data file  found in"&&year&&"Folder"
					--smartUtil.validate it&"("&year,"HM"
					set the TextStyle to default
					##Checking the data file Size
					smartUtil.readTextUsingText"Name",18,25,500,450,"HM"
					split global currLocVal by newline
					log global currLocVal
					delete space in global currLocVal 
					log global currLocVal
					(*if it is "Intransit_Report" 
						set the TextStyle to{textDifference:1,ignoreUnderscores:Yes}
					end if  *)
					repeat with each folder of global currLocVal
						--doubleclick text: it,ignoreSpaces: Yes,hotspot:[858,8],searchRectangle:(screenPartition().SUT.("HM"))
						(*if folder is "Intransit_Report" 
							set the TextStyle to{textDifference:2,ignoreUnderscores:Yes}
						end if*)  
						smartUtil.setCustomSearchRectangle "Name",18,25,500,450,"HM"
						doubleclick (centerLeft of imageRectangle(text:folder,searchRectangle:screenPartition().SUT.("Custompart"),ignoreUnderscores:Yes,ignoreSpaces:Yes,waitFor:universal pageWait))+[876,4]
						
						set the TextStyle to default
						Typetext controlkey,"c"
						Log RemoteClipboard()
						put  RemoteClipboard() into universal fileSize
						if (universal fileSize=0)
							LogError folder&&"file size is 0 and the file has no data"
							
						else
							LogSuccess folder&&"file has"&&universal fileSize&&"of data"
							
						end if
						set universal fileSize to empty
					end repeat
					set universal fileSize to empty
					##checking the File Type
					set the TextStyle to{dpi:144}
					smartUtil.readTextUsingText"Name",10,20,500,350,"HM"
					log global currLocVal
					split global currLocVal by newline
					put number of items of  global currLocVal into universal totalNumberOfFiles
					put number of items of (each item of global currLocVal where each contains "xlsx") into universal totalNumberOfxlsxFiles
					if(universal totalNumberOfFiles=universal totalNumberOfxlsxFiles)
						LogSuccess "All  the Files in the "&& folderName&&" are in the xlsx Format"
						LogSuccess "The application is able to access the underlying S3 bucket successfully."
					else
						LogError "The application is Not able to access the underlying S3 bucket successfully."
						LogError"All the Files in "&& folderName&&"are not in the xlsx Format"
					end if
				else
					LogError folderName&&"data file  not found the Selected year of "&&year			
				end if
				
			else
				LogWarning year&&"Folder not  found in side the"&&folderName
			end if
		else
			LogWarning folderName&&"Folder not  found in side the Archival_Reports"
		end if
		##Click on the back arrorw button 
		smartUtil.clickUsingImage "SMI/backClickArrow","TLQ"
		smartUtil.clickUsingImage"SMI/backClickArrow","TLQ"
		set the TextStyle to default
	end repeat
	smartUtil.clickUsingImage "SMI/backClickArrow","TLQ"	
end S3AccessSMI


(*Download All - SMI*)
to downloadAllSMI  
	--set  submenuList to ["Daily Report","Transaction Report","Forecast Report", "Part","In Transit"]
	set submenuList to universal data.SMISubMenu
	set universal totalnumberOfNoDataFoundReports to empty
	repeat with each SubmenuValue of submenuList
		##Navigate to the Purchase Order page by clicking on the  SMI Menu
		"SC2_CommonActions/sc2CommonHandlers".navigateMenuandSubMenu"SMI Menu",SubmenuValue
		#Wait Until the Complete Page to be Loaded (Waiting up to Universal pagewait)
		smartUtil.validate"Filter","LH"
		##Getting the Total Count from the Application
		if ImageFound(text:"No records found",searchRectangle:screenPartition().SUT.("Center"),waitFor:5)
			put  universal a=universal a+1
			insert SubmenuValue into universal totalnumberOfNoDataFoundReports
			smartUtil.clickUsingImage "SMI/exportIcon","THTH"
			if ImageFound(text:"File Processed Successfully",SearchRectangle:[778,108,1140,167])
				LogSuccess "Time taken to download the file is:"&&the result
				excelFileInteractions.openExcelFromDownloads SubmenuValue
				typetext controlKey,shiftkey,downArrow
				typetext controlKey,c
				wait 3
				put RemoteClipboard() into global countAfterCheckingDuplicates
				log global countAfterCheckingDuplicates
				replace every occurrence of newline in global countAfterCheckingDuplicates with ","
				log (number of items of global countAfterCheckingDuplicates)-1
				set universal countFromExcel to(number of items of global countAfterCheckingDuplicates-1)
				log universal countFromExcel
				if (universal countFromExcel=0)
					LogSuccess SubmenuValue &&" has been successfully downloaded.it currently contains no data in the application, and the exported file is also empty"
				else
					LogWarning  SubmenuValue &&"has been successfully downloaded.it currently contains no data in the application, and the exported file has"&&universal countFromExcel &&"items"
					insert SubmenuValue into  universal invalidReports
				end if
				excelFileInteractions.closeFileByclickinOnSave
				smartUtil.closeTab
			else
				waitFor 120,{text:"No data found to be downloaded",SearchRectangle:[778,108,1140,167]}
				smartUtil.validate"No data found to be downloaded","THTH"
				LogSuccess "No data found in the"&&SubmenuValue&&"hence can not Download the file  and No data found to be downloaded message is validated Successfully"
				
			end if
			
		else
			LogSuccess "The Application has some data hence validating the Exported file by Expoting the File"
			smartUtil.clickUsingImage"SMI/exportIcon","TRQ"
			waitFor 120,{text:"File Processed Successfully",SearchRectangle:[778,108,1140,167]}--remove serach rect
			##Loging  the Time Taken to Download the File
			LogSuccess "Time taken to download the file is:"&&the result
			##Validate the File Processed Successfully after Downloading the File
			if ImageFound(text:"File Processed Successfully",SearchRectangle:[778,108,1140,167])
				smartUtil.validate"File Processed Successfully","THTH"
				LogSuccess "Successfully able to Download the"&&SubmenuValue&&"File"
			end if
			excelFileInteractions.openExcelFromDownloads  SubmenuValue
			typetext controlKey,shiftkey,downArrow
			typetext controlKey,c
			wait 3
			put RemoteClipboard() into global countAfterCheckingDuplicates
			log global countAfterCheckingDuplicates
			replace every occurrence of newline in global countAfterCheckingDuplicates with ","
			log (number of items of global countAfterCheckingDuplicates)-1
			set universal countFromExcel to(number of items of global countAfterCheckingDuplicates-1)
			log universal countFromExcel
			if (universal countFromExcel=0)
				Logwarning "File Downloaded Sucessfully But the File is empty"
				insert SubmenuValue into universal invalidReports
			else
				LogSuccess "The"&&SubmenuValue&&"file is Downloaded  Successfully with "&&universal countFromExcel&&"Items"
			end if
			excelFileInteractions.closeFileByclickinOnSave
			smartUtil.closeTab
		end if
		smartUtil.clickText"Dashboard","THTH"
	end repeat
	LogWarning "No data found report are"&&universal totalnumberOfNoDataFoundReports
	if (number of items of universal invalidReports =0)
		LogSuccess"All report functionalities have been tested and are working correctly. There are no issues, and the system is fully functional"
	else
		LogError "The reports contain invalid data are "&&universal invalidReports
	end if
end downloadAllSMI

(*Set Preferences - SMI*)

to setPreferencesSMI profileName,preferences,preferenceName
	set universal invalidPreferneceSelectedReports to empty
	set universal noDataReturnRecords to empty
	set universal dataReturnRecords to empty
	
	##Selecting the Preferences in the UI to validate the Preferences
	smartUtil.validate profileName,"topRightQuadrant"
	smartUtil.clickTextAtSpot profileName,"-20","1","topRightQuadrant"
	smartUtil.validate"Preference","TRQ"
	#clicking on preference and Validating preference page is opened
	smartUtil.clickText "Preference","topRightQuadrant"
	smartUtil.validate "Setting Filter Preference","topLeftQuadrant"
	smartUtil.clickText"Reset","LH"
	wait 2
	##selecting the Preferences 
	repeat with each preferenceValue of universal data.preferences
		smartUtil.setCustomSearchRectangle universal data.preferenceName,185,-50,1500,50,"HM"
		if ImageFound(text:preferenceValue,searchRectangle:(screenPartition().SUT.("Custompart")))
			LogSuccess "The"&preferenceValue&&"is Already Selected in the "&&preferenceName
		else
			Log"Select the "&&preferenceValue&&"from the"&&preferenceName
			"SMI/SMI_utilities".selectPreferenceInSMI universal data.preferenceName,preferenceValue 
			##Click ON Update Button to Update the Preferences
			smartUtil.clickText"Update","LH"
			# After Selectingthe preference Validating the Success Pop up message
			if ImageFound(text:"Your preference has been updated",searchRectangle:(screenPartition().SUT.("THTH")))
				LogSuccess "The "&&preferences&&"has been updated Successfully"
				smartUtil.validate"Your preference has been updated","THTH"
			else
				LogError "The "&&preferences&&"is not Updated"
			end if
		end if
	end repeat
	#Click on the Dashboard
	smartUtil.clickText"Dashboard","THTH"
	#Navigate to the Menu and Purchase Order page to validate the Preferences
	--set reportList to ["Daily Report","Transaction Report","Forecast Report","Part Specific","In transit"]
	set  universal reportList to universal data.reports
	--log universal reportList 
	--set reportList to ["Part Specific","In transit" ]
	repeat with each reportValue of universal reportList 
		"SC2_CommonActions/sc2CommonHandlers".navigateMenuandSubMenu"SMI Menu",reportValue
		smartUtil.validate"Filter","LHLH"
		wait 2
		smartUtil.clickUsingImage"SMI/filterIcon","LHLH"
		smartUtil.setCustomSearchRectangle universal data.preferenceName,185,-50,1500,50,"HM"
		##Repeating with the each preference for validation 
		repeat with each preferencesValue of universal data.preferences
			--set the TextStyle to {DPI:144,contrast:on,textDifference:1}
			if ImageFound(text:preferencesValue,searchRectangle:(screenPartition().SUT.("HM")))
				Logsuccess preferencesValue&&"Found in the"&&reportValue
				smartUtil.validate preferencesValue,"Custompart"
				smartUtil.clickUsingImage"SMI/filterIcon","LHLH"
				if ImageFound(text:"No records found",searchRectangle:(screenPartition().SUT.("HM"))) or ImageFound(text:"No data found",searchRectangle:(screenPartition().SUT.("HM")))
					LogSuccess reportValue&&"returns no data with selected preference of"&&universal data.preferences
					insert reportValue into universal noDataReturnRecords
				else
					LogSuccess reportValue&&"returns data with selected preference of"&&universal data.preferences
					insert reportValue into universal dataReturnRecords
				end if
			else
				LogWarning "The Application is Not Filtered with"&&preferencesValue&&"in"&&reportValue&&"or Data is not available in the Application"
				insert reportValue into universal invalidPreferneceSelectedReports
			end if
		end repeat
		--set the TextStyle to default
		smartUtil.clickText"Dashboard","THTH"
	end repeat 
	
	###Valid Reports
	if ( number of items of universal invalidPreferneceSelectedReports >0) 
		
		LogError "The Reports which has Invalid Preference"&&universal invalidPreferneceSelectedReports
	else
		LogSuccess universal reportList &&"Reports are filtered with the "&&universal data.preferences
	end if
	
	##noDataReturnRecords 
	if ( number of items of universal noDataReturnRecords >0) 
		
		LogSuccess universal noDataReturnRecords&&" Reports returns no data with selected preference of"&&universal data.preferences
	else
		LogSuccess universal dataReturnRecords&&" Reports returns data with selected preference of"&&universal data.preferences
	end if
	
	##dataReturnRecords
	if ( number of items of universal dataReturnRecords>0) 
		
		LogSuccess universal dataReturnRecords&&" Reports returns data with selected preference of"&&universal data.preferences
	else
		LogSuccess universal noDataReturnRecords&&" Reports returns no data with selected preference of"&&universal data.preferences
	end if
	
	
end setPreferencesSMI

--Daily Report","Transaction Report","Forecast Report", "Part","In Transit
(*dashboardMenuValidation*)
to dashboardMenuValidation userName,passWord,tails,organization,supplier
	###setting alll the Universal variables to Empty
	set universal invalidDataFoundReports to empty
	set universal totalLogErrorMessage to empty
	set universal invalidDataFoundReportsWithData to empty
	set universal invalidDataFoundReportsWithOutData to empty
	##Checking Errors in the Console Window in the Login Page
	"SC2_Login/logInAndLogout_commonHandlers".launchURL
	"PORS/PORS_utilities".errorValidationInConsole"","Login Page"
	--"SC2_Login/logInAndLogout_commonHandlers".logInToSC2App universal data.userName,universal data.passWord
	"SC2_Login/logInAndLogout_commonHandlers".logInToSC2App universal data.userName,universal data.passWord
	##Sets the Defualt Module in the Application
	"SC2_CommonActions/sc2CommonHandlers".AppModuleSelector universal data.moduleName,universal data.titleofModule
	"PORS/PORS_utilities".errorValidationInConsole"","Dashboard"
	set preferencedataList to[universal data.preferenceDataWithData,universal data.preferenceDataWithOutData]
	repeat with each preferenceDatavalue of preferencedataList
		##Setting up the Preferences to validate the No Record found senario
		smartUtil.validate universal data.profileName,"topRightQuadrant"
		smartUtil.clickTextAtSpot universal data.profileName,"-20","1","topRightQuadrant"
		smartUtil.validate"Preference","TRQ"
		#clicking on preference and Validating preference page is opened
		smartUtil.clickText "Preference","topRightQuadrant"
		smartUtil.validate "Setting Filter Preference","topLeftQuadrant"
		smartUtil.clickText"Reset","LH"
		wait 2
		##selecting the Preferences 
		repeat with each item preferenceValue of  universal data.preferencesNames
			smartUtil.setCustomSearchRectangle preferenceValue,185,-50,1500,50,"HM"
			LogSuccess"Select the "&&item repeatindex() of preferenceDatavalue&&"from the"&&preferenceValue
			"SMI/SMI_utilities".selectPreferenceInSMI preferenceValue,item repeatindex() of preferenceDatavalue 
			# After Selectingthe preference Validating the Success Pop up message
		end repeat
		##Click on Update Button to Update the Preferences
		smartUtil.clickText"Update","LH"
		if ImageFound(text:"Your preference has been updated",searchRectangle:(screenPartition().SUT.("THTH")))
			smartUtil.validate"Your preference has been updated","THTH"
			LogSuccess "The"&& universal data.preferencesNames&&"has been updated Successfully"
		else
			LogError "The "&& universal data.preferencesNames&&"is not Updated"
		end if
		##Click on Dashboard
		smartUtil.clickText"Dashboard","THTH"
		##Testing the NO RECORDS FOUND Senario in all the Reports in the repeat Loop
		##If any screen is supposed to display records and if there are no records available to display, the screen should display 'NO RECORDS FOUND'. If the screen is blank then it is an issue and should be reported.
		##Navigate to the Purchase Order and validate the NO RECORDS FOUND 
		--set  universal reportList to ["Daily Report","Transaction Report","Forecast Report","Part Specific","In transit"]
		set  universal reportList to universal data.reports
		--set reportList to ["Daily Report","Transaction Report"]
		repeat with each reportvalue of  universal reportList 
			"SC2_CommonActions/sc2CommonHandlers".navigateMenuandSubMenu"SMI Menu",reportvalue
			smartUtil.validate"Filter","LHLH"
			if preferenceDatavalue is universal data.preferenceDataWithData
				if ImageFound(text:"No records found",searchRectangle:(screenPartition().SUT.("HM"))) or ImageFound(text:"No data found",searchRectangle:(screenPartition().SUT.("HM")))
					LogWarning "The Application is not working as Excepted with the Selected preference of"&&preferenceDatavalue&&"in"&&reportvalue
					"PORS/PORS_utilities".errorValidationInConsole"",reportvalue
					insert reportvalue into universal invalidDataFoundReportsWithData
				else
					LogSuccess "The Application is Working as Expected After Selecting the preference as"&&preferenceDatavalue&&"and valid data is populated in the"&&reportvalue&&"File"
					
				end if
			end if
			if preferenceDatavalue is universal data.preferenceDataWithOutData
				wait 1
				if ImageFound(text:"No records found",searchRectangle:(screenPartition().SUT.("HM"))) or ImageFound(text:"No data found",searchRectangle:(screenPartition().SUT.("HM")))
					LogSuccess "The Application is Working as Expected After Selecting the preference as"&&preferenceDatavalue&& "and valid data is populated in the"&&reportvalue&&"File"
				else
					LogWarning "The Application is not working as Excepted with the Selected preference of"&&preferenceDatavalue&&"in"&&reportvalue
					"PORS/PORS_utilities".errorValidationInConsole"",reportvalue
					insert reportvalue into universal invalidDataFoundReportsWithOutData
				end if
			end if
			
			smartUtil.clickText"Dashboard","THTH"
			--end if
		end repeat
	end repeat
	if universal invalidDataFoundReportsWithData >0
		LogError universal invalidDataFoundReportsWithData&&"returns no data with selected preference of "&&universal data.preferenceDataWithData
	else
		LogSuccess universal reportList &&"returns data with selected preference of "&&preferenceDatavalue
	end if
	
	if universal invalidDataFoundReportsWithOutData >0
		--LogError "With the  Selected Preference of"&& universal data.preferenceDataWithOutData&&"data is not populated in the"&&universal invalidDataFoundReportsWithOutData
		LogError universal invalidDataFoundReportsWithOutData&&"returns no data with selected preference of "&&universal data.preferenceDataWithOutData
	else
		LogSuccess universal reportList &&" returns data with selected preference of "&&preferenceDatavalue
	end if
	
	if universal totalLogErrorMessage>0
		LogError "Console Errors present in the mentioned navigations"&&universal totalLogErrorMessage
	else
		LogSuccess"The Login page,Dashbord and"&&universal reportList&&"Respected Reports  are validated and there are no Console Errors present in the respected navigations"
	end if
	
end dashboardMenuValidation

(*validationOfAllTheMenusSMI*)
to validationOfAllTheMenusSMI
	set universal totalLogErrorMessage to empty
	(*##Checking Errors in the Dashboard page*)
	"PORS/PORS_utilities".errorValidationInConsole"","Dashboard page"
	
	##checking the Errors in the Archive Files 
	smartUtil.clickText"Archive Files","THTH"
	"PORS/PORS_utilities".errorValidationInConsole "","Archive Files"
	if number of items of universal totalLogErrorMessage>0
		LogError "The menus which as Console Errors are "&&universal totalLogErrorMessage
	else
		LogSuccess"Successfully checked all the menus in the application, and there are no console errors"
	end if
end validationOfAllTheMenusSMI


