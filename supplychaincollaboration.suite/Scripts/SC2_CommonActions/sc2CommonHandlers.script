to readTestData
	Params SheetName
	setUpScreenShotPath
	set universal data to empty
	set the ImageUpdate to Auto
	#Typetext Enterkey
	wait 0.9
	if imagefound(text:"Logon Legal Notice",waitfor:5,LowResolutionMode:"Yes")
		click [200,300]
		Typetext Enterkey		
	else
		log "Logon Legal Notice not required to this connected SUT"
		
	end if
	repeat 3 times
		click [200,300]
		wait 2
	end repeat
	(*set myExcelDB to {type: "excel",file:ResourcePath("SCC_TestDataFile.xlsx"),name:SheetName,writable:"Yes"} 
	set universal data to the records of myExcelDB where run_Status is "yes"*)
	if ConnectionInfo().Status is "Connected"
		put ConnectionInfo().username into global User_Name
		set global sutID to ConnectionInfo().ServerID
	else
		throw "Error","SUT not connected"
	end if
	split global User_Name by "\"
	put item 2 of global User_Name into global ExcelUserName
	log "User : "&global ExcelUserName
	set global DataFilePath to "C:\AutomationResources\SCC\"&global ExcelUserName&"_SCC_TestDataFile.xlsx"
	--set global DataFilePath to "C:\AutomationResources\SCC\"&global ExcelUserName&"_SCC_WPO_TestDataFile.xlsx"
	set myExcelDB to {type: "excel",file:global DataFilePath,name:SheetName,writable:"Yes"} 
	set universal data to the records of myExcelDB where run_Status is "yes"
	if universal data is empty then 
		logerror " Run Status is -Done No Data found to continue with Next Step"
		exit all
	end if
	SUTInfo
	if universal data.SC2ApplicationURL is "https://qa.collabportal.keysight.com/login"
		set data.environment to "Test"
	else if  universal data.SC2ApplicationURL is "https://collabportal.keysight.com/login"
		set data.environment to "Prod"
	else
		LogError "Bot is not operating in the correct Environment and Execution type"
		exit all
	end if
	set data.jira_project_name to universal data.Jira_Project_Name
	set data.jira_key to universal data.Jira_Key
	set data.execution_type to universal data.Execution_Type
	log "{ eggplant_data_sync : " &data&"}"
end readTestData

to ExcelToolInteractions 
	Params SheetName
	
	set MyExcelFile to Workbook(ResourcePath("dataFile.xlsx"))
	set Sheet to worksheet(MyExcelFile,SheetName)
	put Sheet's cellRange(1) into Headers
	put item 1 of Headers into VariableNames
	put the number of items of item 1 of Headers into HeadersCount
	put Sheet's cellRange(A) into TotalData
	put item 1 of TotalData into totalDataLines
	put the number of items of item 1 of TotalData into totalDataLinesCount
	repeat number of items of totalDataLinesCount
		put Sheet's cellRange(repeatindex()+1) into Lines
		put item 1 of Lines into LinesData
		log LinesData
		log number of items of LinesData
		try
			smartUtil.validateWithoutTry "Wrap"
			typetext controlKey,"f"
			typetext "Trx Type"
			typetext altKey,"f"
			TypeText altKey,f4
		catch
			smartUtil.clickText "Trx Type"
		end try
		repeat repeatindex() times
			typetext downArrow
		end repeat
		repeat with each item of LinesData
			typetext it
			wait 1 tick
			typetext tabKey
		end repeat
	end repeat
end ExcelToolInteractions


to setUpScreenShotPath
	set screenshotPath to the resourcepath & slash &"Test_Evidence"
	if folder (screenshotPath&".zip") exists then delete folder (screenshotPath&".zip")
	if folder screenshotPath exists then	
		delete folder screenshotPath
		create folder screenshotPath
	else
		create folder screenshotPath
	end if
	set universal screenshotPath to screenshotPath
end setUpScreenShotPath


##After Login into the Application The handler will select the Module in the Application 
to AppModuleSelector moduleName,titleofModule
	if ImageFound(text:titleofModule,searchRectangle:(screenPartition().SUT.("TLQ")),waitFor:5)
		LogSuccess"The Application is in Required Module of "&&titleofModule&&"Continue with the next Step of validations"
	else
		##Validating the Apps Icon 
		LogWarning"The Application is not in  Required Module of "&&titleofModule&&"Changing the Application module to"&&titleofModule
		
		if ImageFound(image:"icons/appsIcon",searchRectangle:(screenPartition().SUT.("TLQ")),waitFor:universal pageWait)
			LogSuccess"The App icon has been located, allowing users to configure their default module settings"
			#Click on the Apps Icon to Set the Defualt module in the Application
			smartUtil.clickUsingImage "icons/appsIcon","TLQ"
			wait 3
			if ImageFound(text:"Apps",searchRectangle:(screenPartition().SUT.("TLQ")),waitFor:universal pageWait)
				LogSuccess"The Module Selection popup is now open, allowing users to set their default module preferences."
				click (centerLeft of imageRectangle(text:moduleName,searchRectangle:(screenPartition().SUT.("LHLH")),waitFor:universal pageWait))+[367,9]
				smartUtil.validate"Successfully update default login","THTH"
				smartUtil.clickText moduleName,"LHLH"
				if ImageFound(text:titleofModule,searchRectangle:(screenPartition().SUT.("THTH")),waitFor:universal pageWait)
					LogSuccess"The Application is in the "&&titleofModule&&"Page Continue with the next Step of validations"
					smartUtil.validate titleOfModule,"THTH"
				else
					LogError"The Application is not  in the "&&titleofModule&&"Page"
				end if
			else
				LogError "The Module Selection popup is not Opend"
				exit all
			end if
		else
			LogError"The App icon not located, to allow the users to configure their default module settings"
			exit All
		end if
	end if
end AppModuleSelector


to getTS TStyle
	try
		set textsyle to []
		log TStyle
		Set StyleProperties to{
			//hosts different textstyles...
			popUp:(contrast:"On", contrastColor:"#FFFFFF", contrastTolerance:"50"),
			redButton:(contrast:"On", contrastColor:"#F00129", contrastTolerance:"50", textDifference:1),
			white:( contrast:"On", contrastColor:"#FFFFFF", contrastTolerance:"40", textDifference:1),
			Default:(contrast:"Off"),
			chineseRedButton:(contrast:"On", contrastColor:"#FF4664", contrastTolerance:"99", dpi:"144",textDifference:1),
			blueButton:(contrast:"On", contrastColor:"#4b6496", contrastTolerance:"45"),
			blackButton:(contrast:"On", contrastColor:"#312829", contrastTolerance:"45"),
		}
		
		Try
			Set the TextStyle to StyleProperties.(TStyle)
		Catch theException
			throw TStyle && "is not a recognized StyleProperties."
			Set the TextStyle to "Default"
		End try
		return the TextStyle
	Catch theException
		smartUtil.errorCapture theException
	End try
end getTS


to insertDataIntoFile
	set MyExcelFile to Workbook(ResourcePath("dataFile.xlsx"))
	set Sheet to worksheet(MyExcelFile,PreRequisiteForE2E)
	put Sheet's cellRange(4) into Headers
	put item 1 of Headers into VariableNames
	--log VariableNames
	set MyExcelFile1 to Workbook(ResourcePath("dataFile.xlsx"))
	set Sheet to worksheet(MyExcelFile1,EndToEnd)
	repeat with each item of VariableNames
		put it into Cell(4,repeatindex()) of Sheet
	end repeat
end insertDataIntoFile

to handle LogonLegalNotice
	try
		Typetext Enterkey,endkey
		
		if imagefound(text:"Logon Legal Notice",waitfor:5,LowResolutionMode:"Yes")
			Typetext Enterkey,endkey
			
		else
			log "Logon Legal Notice not required to this connected SUT"	
			
		end if
		wait 2
		// close if any opened browser window
		typetext controlKey,shiftKey,"w"
		smartUtil.verifyImage "icons/searchIconOnDesktop","BLQ"
	Catch theException
		smartUtil.errorCapture theException
	End try
end LogonLegalNotice


to handle ClearCache
	try
		click [20,140]
		typetext controlKey,shiftKey,deleteKey
		if imagefound(text:"Today",waitfor:10,searchRectangle:(screenPartition().SUT.("VM")))
			click FoundImageLocation()
			typetext downArrow,return
		end if
		if imagefound(text:"Delete data",waitfor:10,searchRectangle:(screenPartition().SUT.("BH"))) or imageFound(text:"OK",caseSensitive:yes,searchRectangle:(screenPartition().SUT.("VM")))
			click FoundImageLocation()
			log "Cache cleared sucessfully"
		end if
		repeat 3 times
			typetext controlKey,w
		end repeat
	Catch theException
		smartUtil.errorCapture theException
	End try
end ClearCache

to handle SUTInfo
	if ConnectionInfo().Status is "Connected"
		set global sutID to ConnectionInfo().ServerID
		log "SUT Connected"
	else	
		throw "Error","SUT not connected"
	end if		
	put global sutID into universal data.SUT_Server_ID
end SUTInfo


#selecting the preference based on requirement
to selectPreference Menu, Options
	repeat with each item of Options
		Repeat until ImageFound(text:Menu,searchRectangle:(screenPartition().SUT.("LHLH")))
			ScrollWheelDown 4
		End Repeat
		put FoundImageLocation() into MenuLoc
		Click FoundImageLocation()
		put the number of items of Options into OptionsToSelect
		put it into FirstItem	
		smartUtil.setCustomSearchRectangle Menu,-40,10,350,280,"LH"
		#smartUtil.validate FirstCharacter,CustomPart
		if ImageFound(text:"Search",searchRectangle:(screenPartition().SUT.(CustomPart)))
			smartUtil.clickText "Search",CustomPart
			smartUtil.textField it
			wait 4
			typetext spacebar
			#smartUtil.clickText, Options,CustomPart
		end if
		wait 2
		smartUtil.setCustomSearchRectangle Menu,-40,45,300,300,"LH"
		#smartUtil.validate "Nu", CustomPart
		set the TextStyle to {DPI:144,contrast:on,textDifference:1}
		repeat until ImageFound(text:FirstItem,searchRectangle:(screenPartition().SUT.(CustomPart)))
			ScrollWheelDown 2	
		end repeat
		Click FoundImageLocation()
		set the TextStyle to {DPI:72,contrast:off}
	end repeat
end selectPreference

# Selecting week based on requirement
to selectWeek week 

	smartUtil.setCustomSearchRectangle "weeks",-30,-40,150,300,"LH"
	repeat each item of week
		put item repeatIndex() of week into week
		repeat until ImageFound(text:week,searchRectangle:(screenPartition().SUT.(CustomPart)))
			ScrollWheelDown 2
			
		end repeat
		Click FoundImageLocation()
	end repeat
end selectWeek

# adding new work week sheet based on the requirement
to addNewWorkSheet dropDown,drpValue,week,adjValue,reasonValue,remark
	smartUtil.setTextstyle "GrayText"
	smartUtil.setCustomSearchRectangle "ADD NEW WORKWEEK",1400,20,-1400,230,"topLeftQuadrant"
	#smartUtil.validate "Planner",Custompart
	
	smartUtil.clickText "WORKWEEK","LH"
	smartUtil.setTextstyle "Default"
	smartUtil.clickText dropDown,"Custompart"
	smartUtil.validate drpValue,"Custompart"
	smartUtil.clickText drpValue,"Custompart"
	smartUtil.clicktext "Adj","Custompart"
	smartUtil.textField adjValue,"Custompart"
	smartUtil.validate "Reason","Custompart"
	smartUtil.clickText "Reason","Custompart"
	smartUtil.validate reasonValue,"Custompart"
	smartUtil.clickText reasonValue,"Custompart"
	smartUtil.validate "Planner Remark","Custompart"
	smartUtil.clickText "Planner Remark","Custompart"
	smartUtil.textField "Planner Remark",remark,"Custompart"
	smartUtil.clickText "Save","TH"
	smartUtil.validate "Successfully Created","TH"
end addNewWorkSheet
# selecting the KR Summary from and to week

to selectWeekInKRSummary week
	(*smartUtil.setCustomSearchRectangle "Clear", -30,10,30,-200
	smartUtil.validate "week",CustomPart
	Repeat until ImageFound(text:week,searchRectangle:(screenPartition().SUT.(CustomPart))) or ImageFound(text:week,searchRectangle:(screenPartition().SUT.(CustomPart)),dpi:144)
		smartUtil.clickUsingImage "icons/weekDownArrowInKRSummary","LH"
		smartUtil.goTo "week"
		if repeatindex() >5 then exit repeat
	end repeat
	click FoundImageLocation()*)
	smartUtil.setCustomSearchRectangle "Clear", -13,10,30,-200
	(*--smartUtil.validate "week",CustomPart*)
	set flag to false
	Repeat until flag is true
		set the TextStyle to {contrast:on}
		smartUtil.readTextUsingText "Clear",-15,5,31,-160,"LHLH"
		log global currLocVal
		set TextStyle to default
		put  global currLocVal into wwList
		replace every occurrence of newline with "," in wwList 
		log wwList
		repeat with each item of wwList
			if it is week then
				LogSuccess  it&"is  Equal to"&week
				set TextStyle to {dpi:144}
				click text:<not preceded by alphanumeric ,week, not followed by digits>,searchRectangle:(screenPartition().SUT.(Custompart)), contrast:"On", contrastColor:"#FFFFFF", contrastTolerance:"45", dpi:"72"
				set flag to true
				exit selectWeekInKRSummary
			else
				LogWarning it&"is not equal to"&week
			end if
		end repeat
		smartUtil.clickUsingImage "icons/weekDownArrowInKRSummary","LH"
		smartUtil.goTo "week"
	end repeat
end selectWeekInKRSummary


set the TextStyle to {validCharacters:0 to z}
smartUtil.readTextUsingText "Clear",-15,3,31,-170,"LHLH"
log global currLocVal

#select category and verifying the remarks
to selectCategoryAndverifyRemarks week,categoryInForecast,remark
	log "12333333333",week
	wait 4
	"SC2_CommonActions/sc2CommonHandlers".selectCategory universal data.categoryInForecast
	Repeat until ImageFound(text:universal prodWeek, waitFor:5,searchRectangle:(screenPartition().SUT.("LH")))
		ScrollWheelDown 2
	End Repeat
	
	set the SearchRectangle to empty
	Put FoundImageLocation() into TempLoc
	
	set plannerRemark to ImageRectangle(text:week,searchRectangle:(screenPartition().SUT.("leftHalf")))
	
	set the SearchRectangle to [plannerRemark.left + 900,plannerRemark.top-30,plannerRemark.right+1300,plannerRemark.bottom+20]

	put ReadText([plannerRemark.left + 900,plannerRemark.top-30,plannerRemark.right+1300,plannerRemark.bottom+20],ignoreNewLines:yes) into global remarks

	if remark is not empty then assert global remarks contains remark
end selectCategoryAndverifyRemarks

#unselecting all supplier names
to unSelectAllSupplierNames filterName

	#put "Supplier Name" into filterName
	set supplier to ImageRectangle(text:filterName,searchRectangle:(screenPartition().SUT.("LHLH")))
	
	(*smartUtil.setCustomSearchRectangle filterName,350,-30,1789,20
--smartUtil.validate filterName,customPart*)
	
	if ImageFound(Image:"icons/supplierNameClose",searchRectangle:(screenPartition().SUT.(customPart))) then
		repeat until not imagefound(Image:"icons/supplierNameClose",searchRectangle:(screenPartition().SUT.(customPart)))
			smartUtil.clickUsingImage "icons/supplierNameClose",customPart
		end repeat
	else
		log "Supplier not selected"
	end if
end unSelectAllSupplierNames

to checkEmail
	put "https://qa.collabportal.keysight.com/login" into universal URL
	if universal URL contains "https://qa.collabportal.keysight.com/login"
		set universal pageName to "Outlook"
		put universal language into tempLang
		set universal language to "English"
		typetext windowskey,"r"
		
		waitfor universal pageWait, text:"Type the"
		put "Chrome" into browser
		put "outlook.office.com/mail/" into url
		typetext browser&&url
		smartUtil.screenSettleDown 1
		typetext returnkey
		log RemoteClipboard()
		set the SearchRectangle to empty
		set universal pageName to "Outlook"
		set universal quoteNum to "Forecast /Adjustment data file status"
		log RemoteClipboard()
		waitfor 90, text:"Favorites"
		smartUtil.verifyAndEnterText ("Search"),("Forecast /Adjustment data file status")
		typetext returnkey
		smartUtil.screenSettleDown 4
		smartUtil.completeScreenLoad
		repeat until ImageFound(text:"pdl-noreply",waitFor:2)
			
			smartUtil.completeScreenLoad
			put universal quoteNum into universal data.quoteNum
			smartUtil.verifyAndEnterText ("quoteNum"),(universal quoteNum)
			typetext returnkey
			smartUtil.screenSettleDown 2
			put tempLang into universal language
			if repeatIndex() > 5 then
				logError "Mail not Received"
				Exit all
			end if
		end repeat
		smartUtil.clickTextAtSpot "All results",30,35,"LH"
		
		put formattedTime("[D][Mon][Year]",Date) into currentDate
		If ImageFound(text:"uploaded successfully",searchRectangle:(screenPartition().SUT.("center"))) then
			
			smartUtil.validate "Adjustment file have been uploaded successfully","center"
			
			put formattedTime("[D][Mon][Year]",Date) into currentDate
			log currentDate
			smartUtil.validate currentDate,"center"
		else
			smartUtil.clickUsingImage "icons/refresh"
			wait 10
			smartUtil.verifyAndEnterText ("Search"),("Forecast /Adjustment data file status")
			#smartUtil.verifyAndEnterText ("quoteNum"),(universal quoteNum)
			smartUtil.clickTextAtSpot "All results",30,35,"LH"
			smartUtil.validate "Adjustment file have been uploaded successfully","center"
			
			put formattedTime("[D][Mon][Year]",Date) into currentDate
			log currentDate
			
			smartUtil.validate currentDate,"center"
		end If
		
		(*smartUtil.validate "Adjustment file started","center"
log RemoteClipboard()
put formattedTime("[D][Mon][Year]",Date) into currentDate
log currentDate

smartUtil.validate currentDate,"center"*)
		
		put tempLang into universal language
		replace every occurrence of ":" in expectation with "_"
		CaptureScreen {Name: universal screenshotPath & "VerificationMail" && the hour && the minute }
		--set the remoteWorkInterval to 0.3
		#core.closeBrowser
	else
		log "Environment is in QA"
	end if
end checkEmail

to test
	set universal quoteNum to "Forecast /Adjustment data file status"
	smartUtil.verifyAndEnterText ("Search"),("Forecast /Adjustment data file status ")
	typetext returnkey
	smartUtil.screenSettleDown 4
	smartUtil.completeScreenLoad
	repeat until ImageFound(text:"pdl-noreply",waitFor:2)
		
		smartUtil.completeScreenLoad
		put universal quoteNum into universal data.quoteNum
		smartUtil.verifyAndEnterText ("quoteNum"),(universal quoteNum)
		typetext returnkey
		smartUtil.screenSettleDown 2
		put tempLang into universal language
		if repeatIndex() > 5 then
			logError "Mail not Received"
			Exit all
		end if
	end repeat
	put universal quoteNum into universal data.quoteNum
	smartUtil.clickTextAtSpot "All results",30,35,"LH"
	put formattedTime("[D][Mon][Year]",Date) into currentDate
	If ImageFound(text:currentDate,searchRectangle:(screenPartition().SUT.("center"))) then
		
		smartUtil.validate "Adjustment data file status","center"
		
		put formattedTime("[D][Mon][Year]",Date) into currentDate
		log currentDate
		smartUtil.validate currentDate,"center"
	else
		smartUtil.verifyAndEnterText ("quoteNum"),(universal quoteNum)
		smartUtil.clickTextAtSpot "All results",30,35,"LH"
		smartUtil.validate "Adjustment file started","center"
		
		put formattedTime("[D][Mon][Year]",Date) into currentDate
		log currentDate
		
		smartUtil.validate currentDate,"center"
	end If
end test


to deleteAllFilesInDownloads
	TypeText windowskey,e
	wait 4
	smartUtil.validate "Downloads","LHLH"
	smartUtil.clickText "Downloads","LHLH"
	
	if ImageFound(text:"folder is empty",WaitFor:4,SearchRectangle:screenPartition().SUT.("TH"))
		log "Download folder is empty"
		TypeText controlKey,w
	else
		
		TypeText controlKey, a
		TypeText deleteKey
		TypeText controlKey,w
		
	end if
end deleteAllFilesInDownloads

#ForecastAdjvalue Verification
to forecastAdjValueVerification partNumber,weekFrom,weekTo,categoryInForecast,adjValue
	"SC2_CommonActions/sc2CommonHandlers".navigateToForecast
	smartUtil.validate"View Type","TH"
	wait 4
	smartUtil.clickUsingImage "icons/filterIcon","LHLH"
	smartUtil.validate"Filters","LHLH"
	smartUtil.scrollTo "Submit","LH","5"
	"SC2_CommonActions/sc2CommonHandlers".selectPreference "Part Number",partNumber
	smartUtil.clickText"Part Number","LH"
	#"SC2_CommonActions/sc2CommonHandlers".unSelectAllSupplierNames "NDMP"
	smartUtil.scrollTo "Submit","LH","2"
	#Selecting week
	smartUtil.clickTextAtSpot "Week From",258,25,"LH"
	"SC2_CommonActions/sc2CommonHandlers".selectWeekInKRSummary weekFrom
	smartUtil.clickTextAtSpot "Week To",258,25,"LH"
	"SC2_CommonActions/sc2CommonHandlers".selectWeekInKRSummary weekTo
	#click on the submit button
	If ImageFound(text:"Submit", waitFor:1)
		click FoundImageLocation()
	End If
	wait 2
	smartUtil.validate "ITEM NO","LHLH"
	smartUtil.clickUsingImage"icons/ItemExpandIcon","LHLH"
	if categoryInForecast is "NON-TAA" then 
		smartUtil.clickUsingImage  "categories/Non_TAA","center"
		wait 1
		if ImageFound(text:"OK",waitFor:5)
			click text:"OK"
		end if
	else if categoryInForecast is "TAA" then 
		smartUtil.clickUsingImage "categories/TAA","center"
		if ImageFound(text:"OK",waitFor:5)
			click text:"OK"
		end if
	else if categoryInForecast is "SYSTEM" then 
		smartUtil.clickUsingImage "icons/hardBook","center"
		if ImageFound(text:"OK",waitFor:5)
			click text:"OK"
		end if
	end if
	if categoryInForecast is "NON-TAA"  or if  categoryInForecast  is "TAA" or if categoryInForecast is "SYSTEM"
	(*smartUtil.readTextUsingText "Week"&&weekFrom,370,-15,400,10,"LHLH"
log global currLocVal*)
		smartUtil.doubleClickTextAtSpot "Week"&&weekFrom,370,0,"LHLH"
		TypeText controlkey,"c"
		put RemoteClipboard() into  global currLocVal
		log global currLocVal
		
	end if
	if categoryInForecast is "FORECAST" then
		smartUtil.doubleClickTextAtSpot "Week"&&weekFrom,370,0,"LHLH"
		TypeText controlkey,"c"
		put RemoteClipboard() into  global currLocVal
		log global currLocVal
	end if
	if (global currLocVal is adjValue) then
		LogSuccess "The Adj Value is Updated Successfully"
	else
		LogError "The Adj value is not Updated in the Application"
	end if
end forecastAdjValueVerification
#KRSummaryAdj value verification
to handle krSummaryAdjvalueVerification partNumber,weekFrom,weekTo,categoryInForecast,adjValue,verification
	Log "Capturing the Current Work week to validate the KR Summary Work Week"
	"SC2_CommonActions/sc2CommonHandlers".navigateToForecast
	wait 4
	smartUtil.validate"View Type","topLeftQuadrant"
	smartUtil.readTextUsingText "Week",70,-10,40,25,"TRQ"
	log global currLocVal
	delete  <nondigit> from global currLocVal
	put global currLocVal into  universal currentWW
	put universal currentWW+11 into  universal defultWWOfKRS
	log universal defultWWOfKRS
	if weekFrom is greater than universal defultWWOfKRS
		LogWarning"The KR Summary will have Defult 12 Work weeks"
		Exit krSummaryAdjvalueVerification
	end if
	smartUtil.clicktext " Forecast & Commit","TH"
	smartUtil.setCustomSearchRectangle "Forecast & commit", -50,10,200,300
	#validating and click on KR Summary
	smartUtil.clickText "KR Summary","Custompart"
	set the SearchRectangle to empty
	#validating KR Summary page is opened
	#click on supplier and validating Filters is opened
	smartUtil.validate"KR Full-View","THTH"
	smartUtil.completeScreenLoad
	wait 5
	smartUtil.clickUsingImage "icons/filterIcon","LHLH"
	wait 3
	smartUtil.validate"Filters","LHLH"
	#Entering partnumber
	smartUtil.scrollTo "Submit","LH","5"
	"SC2_CommonActions/sc2CommonHandlers".selectPreference "Part Number",partNumber
	smartUtil.clickText"Part Number","LH"
	#"SC2_CommonActions/sc2CommonHandlers".unSelectAllSupplierNames "NDMP"
	smartUtil.scrollTo "Submit","LH","2"
	#Selecting week
	smartUtil.clickTextAtSpot "Week From",250,25,"LH"
	"SC2_CommonActions/sc2CommonHandlers".selectWeekInKRSummary weekFrom
	smartUtil.clickTextAtSpot "Week To",250,25,"LH"
	"SC2_CommonActions/sc2CommonHandlers".selectWeekInKRSummary weekTo
	#click on the submit button
	If ImageFound(text:"Submit", waitFor:1)
		click FoundImageLocation()
	End If
	if imageFound(text:"ORI PART",searchRectangle:(screenPartition().SUT.("LHLH")),waitFor:5)
		LogSuccess "We are in the KR Summary Page Continue with the validation"
	else
		smartUtil.clickText"Supplier","topLeftQuadrant"
		smartUtil.scrollTo"Submit","15"
		smartUtil.clickText"Submit","LHLH"
		wait 2
	end if
	##validating the KR value
	--"SC2_CommonActions/sc2CommonHandlers".verifyTheAdjValue verification
	if categoryInForecast is "NON-TAA" then
		smartUtil.readTextUsingText "Week"&&weekFrom,-45,80,20,120,"HM"
		log global currLocVal
	end if
	if categoryInForecast is "TAA" then
		smartUtil.readTextUsingText "Week"&&weekFrom,-45,120,20,150,"HM"
		log global currLocVal
	end if
	if categoryInForecast is "SYSTEM" then
		smartUtil.readTextUsingText "Week"&&weekFrom,-45,150,20,180,"HM"
		log global currLocVal
	end if
	if categoryInForecast is "FORECAST" then
		smartUtil.readTextUsingText "Week"&&weekFrom,-45,180,20,210,"HM"
		log global currLocVal
	end if
	if (global currLocVal is adjValue) then
		LogSuccess "The Adj Value is Updated Successfully"
	else
		LogError "The Adj value is not Updated in the Application"
	end if
end krSummaryAdjvalueVerification

#IRP SummaryAdj value verification
to irpSummaryAdjValueVerification partNumber,weekFrom,weekTo,categoryInForecast,adjValue
	smartUtil.clicktext " Forecast & Commit","TH"
	smartUtil.setCustomSearchRectangle "Forecast & commit", -50,10,200,300
	#validating and click on KR Summary
	smartUtil.clickText "IRP Summary","Custompart"
	set the SearchRectangle to empty
	#validating KR Summary page is opened
	#click on supplier and validating Filters is opened
	wait 3
	smartUtil.clickUsingImage "icons/filterIcon","LHLH"
	wait 5
	smartUtil.validate"Filters","LHLH"
	#Entering partnumber
	"SC2_CommonActions/sc2CommonHandlers".selectPreference "Part Number",partNumber
	smartUtil.clickText"Part Number","LH"
	#"SC2_CommonActions/sc2CommonHandlers".unSelectAllSupplierNames "NDMP"
	smartUtil.scrollTo "Submit","LH","2"
	smartUtil.clickTextAtSpot "Week From",250,25,"LH"
	"SC2_CommonActions/sc2CommonHandlers".selectWeekInKRSummary weekFrom 
	smartUtil.clickTextAtSpot "Week To",250,25,"LH"
	"SC2_CommonActions/sc2CommonHandlers".selectWeekInKRSummary  weekTo
	If ImageFound(text:"Submit", waitFor:1)
		click FoundImageLocation()
	End If
	--smartUtil.clickText "Submit","LH"
	wait 3
	set the TextStyle to defualt
	Wait Until ImageFound(5,text:"Part Number",searchRectangle:(screenPartition().SUT.("HM")),waitFor:10)
	if categoryInForecast is "NON-TAA" then
		smartUtil.readTextUsingText"Total NON",-10,60,60,110,"HM"
		log global currLocVal
	end if
	if categoryInForecast is "TAA" then
		smartUtil.readTextUsingText"Total NON",100,80,190,110,"HM"
		log global currLocVal
	end if
	if categoryInForecast is "SYSTEM" then
		smartUtil.readTextUsingText"Total NON",240,80,280,110,"HM"
		log global currLocVal
	end if
	if categoryInForecast is "FORECAST" then
		smartUtil.readTextUsingText"Total NON",380,80,420,110,"HM"
		log global currLocVal
	end if
	if (global currLocVal is adjValue) then
		LogSuccess "The Adj Value is Updated Successfully"
	else 
		LogError "The Adj value is not Updated in the Application"
		
	end if
	--"SC2_CommonActions/sc2CommonHandlers".verifyTheAdjValue verification
end irpSummaryAdjValueVerification

to verifyTheAdjValue  verification
	if verification is "ForcastAdj" then
		Repeat until ImageFound(text: "Week"&&universal ProdWeek, waitFor:2,searchRectangle:(screenPartition().SUT.("LHLH")),dpi:144)
			ScrollWheelDown 2
		End Repeat
		wait 3
		set ProdWeek to ImageRectangle(text:"Week"&&universal ProdWeek,searchRectangle:(screenPartition().SUT.("LHLH")),dpi:144)
		set the SearchRectangle to [ProdWeek.left + 350,ProdWeek.top-15,ProdWeek.right+340,ProdWeek.bottom+10]
		wait 3
		put ReadText(the SearchRectangle) into ForecastadjValue
		log  the suitevariables.adjValue
		log ForecastadjValue
		assert that the suitevariables.adjValue is ForecastadjValue
	else if verification is "KRSummary" then
	(*smartUtil.readTextUsingText "30"&&"of Year",100,-50,200,50,"LHLH"
LOG  global currLocVal*)
		set value to ImageRectangle(text: universal ProdWeek&&"of Year",searchRectangle:(screenPartition().SUT.("topLeftQuadrant")))
		wait 5
		set the SearchRectangle to[value.left -100,value.top+75,value.right -90,value.bottom+100]
		wait 2
		put ReadText(the SearchRectangle) into KRvalue
		log KRvalue
		assert that the suitevariables.adjValue is KRvalue
		
	else if verification is "IRPSummary" then
		wait 5
		set value to ImageRectangle(text:"Total NON-",searchRectangle:(screenPartition().SUT.("TH")))
		wait 5
		set the SearchRectangle to[value.left+10,value.top+80,value.right +5,value.bottom+100]
		wait 5
		put ReadText(the SearchRectangle) into irpAdjValue
		log irpAdjValue
		wait 4
		assert that the suitevariables.adjValue is irpAdjValue
	end if
end verifyTheAdjValue

to emailVerification emailverification,verification
	put "https://qa.collabportal.keysight.com/login" into universal URL
	if universal URL contains "https://qa.collabportal.keysight.com/login"
		--set universal pageName to "Outlook"
		(*put universal language into tempLang
set universal language to "English"*)
		typetext windowskey,"r"
		
		--waitfor universal pageWait, text:"Type the"
		put "Chrome" into browser
		put "outlook.office.com/mail/" into url
		typetext browser&&url
		smartUtil.screenSettleDown 1
		typetext returnkey
		set the SearchRectangle to empty
		set universal pageName to "Outlook"
		set universal quoteNum to "Forecast /Adjustment data file status started"
		log RemoteClipboard()
		waitfor 90, text:"Favorites"
		if emailverification is  "TD_1953_importExportValidation"
			if verification is "Columnmissing" then
				smartUtil.verifyAndEnterText ("Search"),universal fileId
				typetext returnkey
				smartUtil.completeScreenLoad
				smartUtil.clickText "pdl-noreply", "LH"
				log "validating the Email Subject"
				smartUtil.validate "Forecast /Adjustment data file status fail","TH"
				wait 3
				log "validating the Email Body"
				smartUtil.validate "Your Forecast / Adjustment file failed to update in the system","HM"
				smartUtil.closeTab
			end if 
			if verification is "rowsmissing" then
				wait 10
				smartUtil.verifyAndEnterText ("Search"), universal fileId
				typetext returnkey
				--smartUtil.screenSettleDown 4
				smartUtil.completeScreenLoad
				wait until ImageFound(text:"pdl-noreply")
				smartUtil.clickText "pdl-noreply", "LH"
				log "validating the Email Subject"
				wait 3
				log "validating the Email Body"
				smartUtil.validate "Your Forecast / Adjustment file started to process in the system","HM"
				repeat 5 minutes
					wait 5
					smartUtil.clickText"Unread","LH"
					try 
						smartUtil.clickTextWithoutTry "pdl-noreply", "LH"
						exit repeat
					catch
						smartUtil.clickText"Unread","LH"
					end try
				end repeat
				wait 4
				log "validating the Email Subject"
				smartUtil.validate "success","TH"
				wait 3
				log "validating the Email Body"
				smartUtil.validate "Your Forecast / Adjustment file have been uploaded","HM"
				--Your Forecast / Adjustment file have been uploaded successfully.
				smartUtil.closeTab
				
			end if
			
			if verification is "missmatchdata" then
				log universal fileId
				wait 10
				smartUtil.verifyAndEnterText ("Search"),universal fileId
				typetext returnkey
				--smartUtil.screenSettleDown 4
				smartUtil.completeScreenLoad
				smartUtil.clickText "pdl-noreply", "LH"
				wait 3
				log "validating the Email Subject"
				smartUtil.validate "Forecast /Adjustment data file status started","TH"
				wait 3
				log "validating the Email Body"
				smartUtil.validate "Your Forecast / Adjustment file started to process in the system","HM"
				repeat 5 minutes
					wait 30
					smartUtil.clickText"Unread","LH"
					try 
						smartUtil.clickTextWithoutTry "pdl-noreply", "LH"
						exit repeat
					catch
						smartUtil.clickText"Unread","LH"
					end try
				end repeat
				
				wait 1
				log "validating the Email Subject"
				smartUtil.validate "Forecast /Adjustment data file status fail","TH"
				wait 2
				log "validating the Email Body"
				smartUtil.validate "Following updates are excluded since record contain invalid data","HM"
				smartUtil.closeTab
				
				
			end if
			if verification is "originalAndFinalvaluesmissmatch" then
				wait 10
				smartUtil.verifyAndEnterText ("Search"),universal fileId
				typetext returnkey
				smartUtil.completeScreenLoad
				smartUtil.clickText "pdl-noreply", "LH"
				wait 3
				log "validating the Email Subject"
				smartUtil.validate "Forecast /Adjustment data file status started","TH"
				wait 3
				log "validating the Email Body"
				smartUtil.validate "Your Forecast / Adjustment file started to process in the system","HM"
				repeat 5 minutes
					wait 30
					smartUtil.clickText"Unread","LH"
					try 
						smartUtil.clickTextWithoutTry "pdl-noreply", "LH"
						exit repeat
						
					catch
						smartUtil.clickText"Unread","LH"
					end try
				end repeat
				wait 4
				log "validating the Email Subject"
				smartUtil.validate "Forecast /Adjustment data file status fail","TH"
				wait 3
				log "validating the Email Body"
				smartUtil.validate "Following updates are excluded since original or final quantities are changed","HM"
				smartUtil.closeTab
				
			end if
			
		end if
		if emailverification is  "TD_1923_ImportAdjInForecastView"
			if verification is "ValueAdjustBeforeRename" then
				wait 10
				smartUtil.verifyAndEnterText ("Search"),universal fileId
				typetext returnkey
				smartUtil.completeScreenLoad
				smartUtil.clickText "pdl-noreply", "LH"
				wait 3
				log "validating the Email Subject"
				smartUtil.validate "Forecast /Adjustment data file status started","TH"
				wait 3
				log "validating the Email Body"
				smartUtil.validate "Your Forecast / Adjustment file started to process in the system","HM"
				repeat 15 minutes
					wait 30
					smartUtil.clickText"Unread","LH"
					try 
						smartUtil.clickTextWithoutTry "pdl-noreply", "LH"
						exit repeat
						
					catch
						smartUtil.clickText"Unread","LH"
					end try
				end repeat
				wait 4
				log "validating the Email Subject"
				smartUtil.validate "Forecast /Adjustment data file status success","TH"
				wait 3
				log "validating the Email Body"
				smartUtil.validate "Your Forecast / Adjustment file have been uploaded successfully","HM"
				smartUtil.closeTab
			end if
			if verification is "ValueAdjustAfterRename" then
				wait 10
				smartUtil.verifyAndEnterText ("Search"), universal reNamedFileName
				log universal reNamedFileName
				typetext returnkey
				smartUtil.completeScreenLoad
				smartUtil.clickText "pdl-noreply", "LH"
				wait 3
				(*smartUtil.setCustomSearchRectangle"All results",-50,0,250,100
smartUtil.clickText "pdl-noreply","Custompart"
wait 3*)
				
				log "validating the Email Subject"
				smartUtil.validate "Forecast /Adjustment data file status started","TH"
				wait 3
				log "validating the Email Body"
				smartUtil.validate "Your Forecast / Adjustment file started to process in the system","HM"
				repeat 15 minutes
					wait 30
					smartUtil.clickText"Unread","LH"
					try 
						smartUtil.clickTextWithoutTry "pdl-noreply", "LH"
						exit repeat
					catch
						smartUtil.clickText"Unread","LH"
					end try
				end repeat
				wait 4
				log "validating the Email Subject"
				smartUtil.validate "Forecast /Adjustment data file status success","TH"
				wait 3
				log "validating the Email Body"
				smartUtil.validate "Your Forecast / Adjustment file have been uploaded successfully","HM"
				smartUtil.closeTab
			end if
		end if
	end if
end emailVerification

to emailCheck  emailSubject,partNumber,ProdWeek,emailInformation,ManagerEMail,outlookOpen
	put "https://qa.collabportal.keysight.com/login" into universal URL
	if universal URL contains "https://qa.collabportal.keysight.com/login"
		if outlookOpen isn't "No"
			typetext windowskey,"r"
			waitfor universal pageWait, text:"Type the"
			put "Chrome" into browser
			put "outlook.office.com/mail/" into url
			typetext browser&&url
			smartUtil.screenSettleDown 1
			typetext returnkey
			log RemoteClipboard()
			set the SearchRectangle to empty
		end if
		waitfor 90, text:"Favorites"
		wait 6
		smartUtil.verifyAndEnterText ("Search"),emailSubject&&partNumber&&ProdWeek,"THTH"
		typetext returnkey
		wait 2
		smartUtil.validate "pdl-noreply","LH"
		try
			smartUtil.validateWithoutTry "All results"
			smartUtil.clickTextAtSpot "All results",30,35,"LH"
		catch
			smartUtil.clickText "pdl-noreply","LH"
			--click the last item of EveryImageLocation(text:"pdl-noreply")
		end try
		wait 5
		smartUtil.validate emailInformation,"HM"
		if ManagerEMail is not empty
			smartUtil.validate ManagerEMail
		end if
		
	end if
	smartUtil.clickTextAtSpot"All folders",250,0,"THTH"
	Typetext controlKey ,a,backspace
end emailCheck

to selectCategory categoryInForecast
	Wait 2
	if categoryInForecast is "NON-TAA" then 
		smartUtil.clickUsingImage  "categories/Non_TAA","center"
		wait 2 
		if ImageFound(text:"Best Practice",waitFor:5,searchRectangle:(screenPartition().SUT.("VM")))
			wait .5
			click FoundImageLocation()
			Typetext tabKey
			typetext return
		end if
		--smartUtil.clickText "OK","center"
		
	else if categoryInForecast is "TAA" then
		smartUtil.clickUsingImage "categories/TAA","center"
		wait 3
		if ImageFound(text:"Best Practice",waitFor:5,searchRectangle:(screenPartition().SUT.("VM")))
			wait .5
			click FoundImageLocation()
			Typetext tabKey
			typetext return
		end if
	else if categoryInForecast is "FORECAST" then 
		smartUtil.clickUsingImage  "categories/Forecast","center"
		if ImageFound(text:"Best Practice",waitFor:5,searchRectangle:(screenPartition().SUT.("VM")))
			wait .5
			click FoundImageLocation()
			Typetext tabKey
			typetext return
		end if
		--smartUtil.clickText "OK","center"
		
	else if categoryInForecast is "SYSTEM" then 
		smartUtil.clickUsingImage "icons/hardBook","center"
		if ImageFound(text:"Best Practice",waitFor:5,searchRectangle:(screenPartition().SUT.("VM")))
			wait .5
			click FoundImageLocation()
			Typetext tabKey
			typetext return
		end if
		--smartUtil.clickText "OK","center"
	end if
end selectCategory

to escalationTab categoryInForecast,AdjustmentValue,EscalationReason,PlannerRemarks,ManagerEMail,checkBoxText
	smartUtil.clickUsingImage "icons/escalationIcon","Custompart"
	#Escalation Submission
	wait 3
	smartUtil.validate "Escalation","LH"
	smartUtil.setCustomSearchRectangle"Escalation",-60,200,700,800,"VM"
	wait 3
	smartUtil.readTextUsingText"Week/Year",80,-2,160,60,"TH"
	log global currLocVal 
	put  global currLocVal  into universal ProdWeek
	--log universal ProdWeek
	smartUtil.validate"View All","VM"
	smartUtil.clickText"View All","VM"
	smartUtil.validate"Escalation","VM"
	wait 0.5
	--"SC2_CommonActions/sc2CommonHandlers".getTS "blackButton"
	--smartUtil.setCustomSearchRectangle"Escalation",-60,-200,700,800
	smartUtil.clickText"Back","LH"
	--"SC2_CommonActions/sc2CommonHandlers".getTS "Default"
	smartUtil.setCustomSearchRectangle"Escalation",-60,-200,700,800,"VM"
	smartUtil.clickText"Demand Category","Custompart"
	smartUtil.clickText categoryInForecast,"Custompart"
	smartUtil.verifyAndEnterText"Adjustment",AdjustmentValue
	smartUtil.clickText"Reason","Custompart"
	smartUtil.clickText EscalationReason,"Custompart"
	smartUtil.verifyAndEnterText "Planner Remarks", PlannerRemarks
	smartUtil.clickTextAtSpot"Manager Email",0,20
	smartUtil.textField ManagerEMail
	
	if checkBoxText is not empty
		smartUtil.clickText checkBoxText, "Custompart"
	end if
	--smartUtil.setCustomSearchRectangle"Escalation",-60,200,700,800,"VM"
	smartUtil.clickText"Escalate","BH"
	wait 2
	--Escalation has been set successfully
	waitFor 60,{text:"Escalation has been set successfully",searchRectangle:(screenPartition().SUT.("THTH"))}
	--waitFor 20,ImageFound{text:"Escalation has been set successfully",searchRectangle:(screenPartition().SUT.("THTH"))}
	
	--smartUtil.validate"Escalation has been set successfully","TH"
end escalationTab 

to getTheAdjacentValue Week
	Repeat until ImageFound(text: "Week"&& Week, waitFor:2,searchRectangle:(screenPartition().SUT.("BH")),dpi:144)
		ScrollWheelDown 2
	End Repeat
	wait 10
	set ProdWeek to ImageRectangle(text:"Week"&& Week,searchRectangle:(screenPartition().SUT.("leftHalf")),dpi:144)
	set the SearchRectangle to [ProdWeek.left + 350,ProdWeek.top-15,ProdWeek.right+340,ProdWeek.bottom+10]
	wait 3
	put ReadText(the SearchRectangle) into ForecastadjValue
	log ForecastadjValue
end getTheAdjacentValue



to validatingTheEscalatedValueInTheUI partNumber,categoryInForecast
	smartUtil.clicktext " Forecast & Commit","TH"
	smartUtil.setCustomSearchRectangle "Forecast & commit", -50,10,200,300
	wait 2
	#validate and click on forecast
	smartUtil.clickText "Forecast","Custompart"
	wait 5
	smartUtil.validate"View Type"
	"SC2_CommonActions/sc2CommonHandlers".navigateToSupplierName universal data.supplierName
	smartUtil.clickUsingImage "icons/ForeCastAndCommitSearchIcon","topLeftQuadrant"	
	smartUtil.textField partNumber,"topLeftQuadrant"
	log partNumber
	smartUtil.clickUsingImage "icons/ForeCastAndCommitSearchIcon","topLeftQuadrant"	
	wait 2
	"SC2_CommonActions/sc2CommonHandlers".selectCategory categoryInForecast
	wait 1
	smartUtil.clickUsingImage "icons/ItemExpandIcon","LHLH"
	wait 2
	--universal data.prodWeek
	Repeat until ImageFound(text: "Week"&&universal ProdWeek, waitFor:2,searchRectangle:(screenPartition().SUT.("LHLH")),dpi:144)
		ScrollWheelDown 2
	End Repeat
	wait 5
	smartUtil.clickTextAtSpot "Week"&&universal ProdWeek,90,0,"LHLH"
	wait 1
	smartUtil.validate"Escalation","TH"
	smartUtil.setCustomSearchRectangle"Escalation",-50,-200,800,700,"TH"
	smartUtil.clickText"View All","Custompart"
	smartUtil.validate"Escalated Date","Custompart"
	wait 3
	--set the textStyle to {contrast:"On", contrastColor:"#FFFFFF", contrastTolerance:"65", dpi:"144"}
	smartUtil.clickText"Back","LH"
	wait 3
	smartUtil.clickText"Cancel","LH"
	set the textStyle to default
	smartUtil.clickText"View Type","TH"
	ScrollWheelUp 10
	wait 2
	smartUtil.clicktext "Forecast & Commit","TH"
	smartUtil.setCustomSearchRectangle "Forecast & commit", -50,10,200,300
	wait 2
	#validate and click on forecast
	smartUtil.clickText "Forecast","Custompart"
	#click on Add new part 
	smartUtil.clickUsingImage "icons/AddNewOriPartNumber","topRightQuadrant"
	#validate Add new work week page is opened
	wait 3
	smartUtil.validate "ADD NEW WORKWEEK","topLeftQuadrant"
	--smartUtil.clickUsingImage "icons/escalationIcon","Custompart"
end validatingTheEscalatedValueInTheUI

to navigateToDashboard
	smartUtil.clickText"Dashboard","topLeftQuadrant"
	smartUtil.validate"Dashboard","topLeftQuadrant"
end navigateToDashboard


to validateWhetherScreenIsOnDashBoardOrNot

	Typetext enterKey
	if ImageFound(text:"Dashboard", waitFor:universal pageWait,searchRectangle:(screenPartition().SUT.("topLeftQuadrant")))
		wait 3
		smartUtil.clickText"Dashboard","topLeftQuadrant"	
		wait 4
		smartUtil.validate"System Time","topLeftQuadrant"	
		log "The Application is on the Dashboard continue with the next steps"
		
	else
		"SC2_Login/logInAndLogout_commonHandlers".launchURL
		"SC2_Login/logInAndLogout_commonHandlers".logInToSC2App universal data.userName,universal data.passWord
		smartUtil.validate"System Time","topLeftQuadrant"	
		log " loged in to the Application  and the Application is on the Dashboard continue with the next steps"
	end if
	
end validateWhetherScreenIsOnDashBoardOrNot

to navigateToForecast
	smartUtil.clicktext "Forecast & Commit","TH"
	wait 0.5
	smartUtil.setCustomSearchRectangle "Forecast & commit", -50,10,200,300
	#validate and click on forecast
	smartUtil.clickText "Forecast","Custompart"
end navigateToForecast

to navigateToPlannerHorizontalView
	smartUtil.clicktext " Forecast & Commit","TH"
	smartUtil.setCustomSearchRectangle "Forecast & commit", -50,10,200,300
	#validate and click on Planner Horizontal View
	--smartUtil.validate "Planner Horizontal View","Custompart"
	smartUtil.clickText "Planner Horizontal View","Custompart"
end navigateToPlannerHorizontalView


to navigateToSupplierName SupplierName
	smartUtil.setCustomSearchRectangle"Dashboard",-100,170,350,260
	smartUtil.clickText SupplierName,"Custompart"
end navigateToSupplierName

to validateControlPhase controlPhase,controlPhase1,controlPhase2
	set supplierNamesList to ["Jabil","Venture","Celestica"]
	"SC2_CommonActions\sc2CommonHandlers".navigateToForecast
	wait 6
	repeat with each item of supplierNamesList
		"SC2_CommonActions\sc2CommonHandlers".navigateToSupplierName item repeatindex() of supplierNamesList
		smartUtil.readTextUsingText"Forecast phase",115,-30,300,30,"topRightQuadrant"
		log global currLocVal
		put global currLocVal into universal currentPhase
		if (controlPhase= universal currentPhase) or if(controlPhase1=universal currentPhase) or if(controlPhase2=universal currentPhase)
			LogSuccess "The Application is in"&&controlPhase&&"continue with next Steps"
			put item repeatindex() of supplierNamesList into universal data.supplierName
			log universal data.supplierName
			if item repeatindex() of supplierNamesList is "Jabil" then
				put universal data.jabilPartNumber into universal data.partNumber
			end if
			if item repeatindex() of supplierNamesList is "Venture" then
				put universal data.venturePartNumber into universal data.partNumber
			end if
			if item repeatindex() of supplierNamesList is "Celestica" then
				put universal data.celesticaPartNumber into universal data.partNumber
			end if
			exit repeat 
		else
			log"checking the Control phase in the other Supplier Name"
			if item repeatindex() of supplierNamesList is "Celestica" then
				logError "Non of the Supplier is in the "&&controlPhase&&"Phase"
				exit all 
			end if
		end if 
	End Repeat
end validateControlPhase


to handle fandCHorizontalViewAdjvalueVerification category 
	smartUtil.completeScreenLoad
	"SC2_CommonActions/sc2CommonHandlers".navigateToPlannerHorizontalView
	smartUtil.completeScreenLoad
	smartUtil.validate"Planner Full-View","THTH"
	smartUtil.clickText"Supplier","topLeftQuadrant"
	"SC2_CommonActions/sc2CommonHandlers".selectPreference "Part Number",universal data.partNumber
	smartUtil.clickText"Part Number","LH"
	#"SC2_CommonActions/sc2CommonHandlers".unSelectAllSupplierNames "NDMP"
	smartUtil.scrollTo "Submit","LH","2"
	#Selecting week
	smartUtil.clickTextAtSpot "Week From",255,31,"LH"
	"SC2_CommonActions/sc2CommonHandlers".selectWeekInKRSummary universal week
	smartUtil.clickTextAtSpot "Week To",258,31,"LH"
	"SC2_CommonActions/sc2CommonHandlers".selectWeekInKRSummary universal week
	#click on the submit button
	smartUtil.clickText "Submit","LH"
	wait 5
	smartUtil.completeScreenLoad
	if category is "NON-TAA" then
		smartUtil.validate"Adj","HM"
		smartUtil.readTextUsingText"Adj",-30,20,40,80
		put  global currLocVal into universal fandcAdjvalue
		log universal fandcAdjvalue
	end if
	if category is "TAA" then
		smartUtil.validate"Adj","HM"
		smartUtil.readTextUsingText"Adj",-30,80,40,120
		put  global currLocVal into fandcAdjvalue
		log  universal fandcAdjvalue
	end if
	if category is "SYSTEM" then
		smartUtil.validate"Adj","HM"
		smartUtil.readTextUsingText"Adj",-30,140,40,180
		put  global currLocVal into universal fandcAdjvalue
		log  universal fandcAdjvalue
	end if
	if categroy is "FORECAST" then	
		smartUtil.validate"Adj","HM"
		smartUtil.readTextUsingText"Adj",-30,180,40,240
		put  global currLocVal into universal fandcAdjvalue
		log universal fandcAdjvalue
	end if	
end fandCHorizontalViewAdjvalueVerification
to openOutLook
	typetext windowskey,"r"
	waitfor universal pageWait, text:"Type the"
	put "Chrome" into browser
	put "outlook.office.com/mail/" into url
	typetext browser&&url
	smartUtil.screenSettleDown 1
	typetext returnkey
	--log RemoteClipboard()
	set the SearchRectangle to empty
	--set universal pageName to "Outlook"
	waitfor 90, text:"Folders"
	if ImageFound(text:"Folders",searchRectangle:(screenPartition().SUT.("LHLH")))
		LogSuccess "The Out Look Page is opened Successfully"
		smartUtil.validate"Folders","LHLH"
	else
		LogError "The Out Look Page is not opend"
	end if
end openOutLook

to searchForItemInOutLook input,textToClick
	smartUtil.validate"Help","THTH"
	wait 5
	if ImageFound( text:"Help",searchRectangle:(screenPartition().SUT.("THTH")),waitFor:3)
		LogSuccess "Search Imge Found in the Out Look Contining with the Item Filter"
		smartUtil.clickTextAtSpot"Help",200,-40,"THTH"
		smartUtil.textField input
		Typetext returnkey
		wait 2	
		smartUtil.setCustomSearchRectangle"Teams",-350,60,300,1000,"LH"
		--smartUtil.clickText textToClick,"Custompart"
		if ImageFound(text:textToClick,searchRectangle:(screenPartition().SUT.("Custompart")),waitFor:3)
			smartUtil.clickText textToClick ,"Custompart"
			LogSuccess "Clicked on"&textToClick
		else
			smartUtil.setCustomSearchRectangle"Teams",-350,60,300,1000,"LH"
			Repeat until ImageFound(text:textToClick,searchRectangle:(screenPartition().SUT.("Custompart")),waitFor:3)
				smartUtil.clickTextAtSpot"Help",200,-40,"THTH"
				smartUtil.textField input
				Typetext returnkey
				if ImageFound(text:textToClick,searchRectangle:(screenPartition().SUT.("Custompart")),waitFor:3)
					smartUtil.clickText textToClick ,"Custompart"
					LogSuccess "Clicked on"&textToClick
				end if
				if repeatIndex() > 50 then
					logError  input&&"Mail not Received"
					Exit all
				end if
			End repeat
		end if
	end if
end searchForItemInOutLook

to validationofEmail subjectofEmail,informationofEmail
	set the TextStyle to {textDifference:1,DPI:144}
	smartUtil.validate subjectofEmail,"TH"
	wait 2
	smartUtil.validate informationofEmail,"HM"
	set the TextStyle to default
end validationofEmail

to closeOutLook
	if ImageFound(text:"Folders",searchRectangle:(screenPartition().SUT.("LHLH")),waitFor:4)
		LogSuccess "We are in the Out Look Page"
		smartUtil.closeTab
		LogSuccess "The Out Look page is Closed Successfully"
		
	else
		LogError "Browser is not in the Outlook page"
	end if
end closeOutLook

to navigateMenuandSubMenu menu,subMenu
	smartUtil.setCustomSearchRectangle"Supply Chain Collaboration",-100,40,1500,200,"THTH"
	smartUtil.clicktext menu,"Custompart"
	smartUtil.setCustomSearchRectangle menu, -50,10,500,500,"Custompart"
	if subMenu is not  empty then 
		smartUtil.clickText subMenu,"Custompart"
	end if
end navigateMenuandSubMenu

to settingPreferences partNumber,weekFrom,weekTo
	smartUtil.clickUsingImage "icons/filterIcon","LHLH"
	wait 4
	--smartUtil.validate"Filters","LHLH"
	--wait until ImageFound(text:"Filters",wait:5)
	wait Until ImageFound(text:"Filters",searchRectangle:(screenPartition().SUT.("LHLH")),waitFor:universal pageWait)
	smartUtil.validate "Filters","TH"
	#Entering partnumber
	--smartUtil.scrollTo "Submit","LH","5"
	"SC2_CommonActions/sc2CommonHandlers".selectPreference"Part Number",partNumber
	smartUtil.clickText"Part Number","LH"
	#"SC2_CommonActions/sc2CommonHandlers".unSelectAllSupplierNames "NDMP"
	smartUtil.scrollTo "Submit","LH","2"
	#Selecting week
	smartUtil.clickTextAtSpot "Week From",258,25,"LH"
	"SC2_CommonActions/sc2CommonHandlers".selectWeekInKRSummary weekFrom
	smartUtil.clickTextAtSpot "Week To",258,25,"LH"
	"SC2_CommonActions/sc2CommonHandlers".selectWeekInKRSummary weekTo
	#click on the submit button
	If ImageFound(text:"Submit", waitFor:1)
		click FoundImageLocation()
	End If
	if imageFound(text:"ORI PART",searchRectangle:(screenPartition().SUT.("LHLH")),waitFor:5)
		LogSuccess "We are in the KR Summary Page Continue with the validation"
	end if
	if ImageFound(text:"ITEM NO",searchRectangle:(screenPartition().SUT.("LHLH")),waitFor:5)
		LogSuccess "We are in the Forecast Page Continue with the validation"
	end if
end settingPreferences

to selectBUInIRPSummary
	set BUList to ["Board Test COE","Digital & Photonics","Electronic Industrial Products COE","HFM COE","NES COE"]
	repeat with each item BU of  BUList
		smartUtil.clickText"Supplier","LHLH"
		smartUtil.validate"Filters","LHLH"
		smartUtil.setCustomSearchRectangle "Bussiness Unit Name",350,-30,1789,30
		if ImageFound(Image:"icons/supplierNameClose",searchRectangle:(screenPartition().SUT.(customPart))) then
			repeat until not imagefound(Image:"icons/supplierNameClose",searchRectangle:(screenPartition().SUT.(customPart)))
				smartUtil.clickUsingImage "icons/supplierNameClose",customPart
				if repeatindex() is 10 then exit repeat 
			end repeat
		else
			log "Bussiness Unit is not selected"
		end if
		"SC2_CommonActions/sc2CommonHandlers".selectPreference"Bussiness Unit Name",BU
		smartUtil.scrollTo"Submit","5"
		smartUtil.clickText"Submit","LHLH"
		if ImageFound(text:"No data found!",searchRectangle:(screenPartition().SUT.("HM"))) or ImageFound(text:"No records found",searchRectangle:(screenPartition().SUT.("HM")))
			if BU is "NES COE" then
				LogError "No data found!  for "&BU&"Check with other Bussiness Unit"
			else
				LogWarning "No data found!  for "&BU&"Check with other Bussiness Unit"
			end if
		else
			LogSuccess "The Application has a data"
			exit repeat
		end if
		if repeatindex() is number of items of BUList then exit repeat		
	end repeat
end selectBUInIRPSummary

to exportAndValidateDataInIRPSummary fileName,firstColumn,dataTypevalue,lastColumn
	--smartUtil.validate data,"HM"
	smartUtil.clickUsingImage"icons/exportInForecastView","topRightQuadrant"
	Try
		smartUtil.validateWithoutTry "File Processed Successfully","TH"
	Catch 
		log "File processed pop up not showing in the UI.Hence moving for the next step "
	End try
	typetext controlKey,j
	wait 3
	smartUtil.clickText fileName,"TH"
	--excelFileInteractions.openExcelFromDownloads fileName
	wait 3
	excelFileInteractions.findTextInExcel firstColumn,"TH"
	smartUtil.validate firstColumn,"TH"
	if dataTypevalue is  not Empty then 
		excelFileInteractions.findTextInExcel dataTypevalue,"TH"
		smartUtil.validate dataTypevalue,"TH"
	end if 
	Click [941,537]
	excelFileInteractions.findTextInExcel lastColumn,"TH"
	smartUtil.validate lastColumn,"TH"
	wait 2
	excelFileInteractions.closeFileByclickinOnSave
	smartUtil.closeTab
end exportAndValidateDataInIRPSummary
(* Navigate to the Planner Horizantal View and Setting up the Filter with Part Number and Work Week *)
to forecastPHVAdjValueVerification partNumber,weekFrom,weekTo,adjvalue
	"SC2_CommonActions/sc2CommonHandlers".navigateMenuandSubMenu"ForeCast&Commit","Planner Horizontal View"
	--"SC2_CommonActions/sc2CommonHandlers".navigateToSupplierName universal data.supplierName
	--wait until ImageFound(text:"Item No",wait :2,)
	smartUtil.completeScreenLoad
	"SC2_CommonActions/sc2CommonHandlers".navigateToSupplierName universal data.supplierName
	--smartUtil.clickText"Supplier","LHLH"
	smartUtil.clickUsingImage"icons/filterIcon","LHLH"
	wait 2
	smartUtil.validate"Filters"
	--smartUtil.scrollTo"Submit","5"
	smartUtil.scrollTo "Submit","LH","5"
	"SC2_CommonActions/sc2CommonHandlers".selectPreference "Part Number",partNumber
	smartUtil.clickText"Part Number","LH"
	#"SC2_CommonActions/sc2CommonHandlers".unSelectAllSupplierNames "NDMP"
	smartUtil.scrollTo "Submit","LH","2"
	(*"SC2_CommonActions/sc2CommonHandlers".selectPreference"Part Number",partNumber
smartUtil.clickText"Part Number","LHLH"*)
	smartUtil.clickTextAtSpot "Week From",258,25,"LH"
	"SC2_CommonActions/sc2CommonHandlers".selectWeekInKRSummary weekFrom
	smartUtil.clickTextAtSpot "Week To",258,25,"LH"
	"SC2_CommonActions/sc2CommonHandlers".selectWeekInKRSummary weekTo
	smartUtil.clickText"Submit","LHLH"
	smartUtil.completeScreenLoad
	wait 3
	smartUtil.validate"Item No","LHLH"
	--smartUtil.validate weekFrom,"HM"
	set the TextStyle to { contrast:"On",dpi:"144"}
	
	if  weekFrom<=9
		put "0"&weekFrom into weekFrom
		log weekFrom
	else
		put weekFrom into weekFrom
		log weekFrom
	end if 
	smartUtil.readTextUsingText"Week "&weekFrom,-180,120,-50,80,"HM"
	put  global currLocVal into universal PHVAdjValue 
	log universal PHVAdjValue
	(*if item 2 of global StepList is "NonFYIOnlyReject"
if adjvalue is not equal to universal PHVAdjValue
LogSuccess "The value is Not Updated in the Application"
else
LogError "The value is Updated in the Application and The Escalation is not REJECTED by the Manager"
end if
else*)
	assert that adjvalue is universal PHVAdjValue
	set the textStyle to default
end forecastPHVAdjValueVerification

to escalationTabInPHV year,AdjustmentValue,EscalationReason,ManagerEMail,checkBoxText
	wait 3
	smartUtil.validate "Escalation","LH"
	smartUtil.setCustomSearchRectangle"Escalation",-60,-200,700,800
	--smartUtil.validate categoryInForecast,"THTH"
	wait 2
	smartUtil.clickText"Week/Year","TH"
	smartUtil.clickTextAtSpot"Week/Year",0,30,"TH"
	wait 1
	--smartUtil.clickText 24,"VM"
	--smartUtil.readTextUsingText"Week/Year",-20,30,100,60,"TH"
	smartUtil.readTextUsingText"Escalation",-20,70,100,100,"TH"
	put  global currLocVal  into universal ProdWeek  
	split universal ProdWeek by "/"
	put item 1 of universal ProdWeek into universal EscalationWeek
	log universal EscalationWeek
	(*if  universal EscalationWeek<=9
		put "0"&universal EscalationWeek into universal EscalationWeek
		log universal EscalationWeek
	else
		put universal EscalationWeek into universal EscalationWeek
		log universal EscalationWeek
	end if *)
	smartUtil.readTextUsingText"Balance Qty",90,-10,140,20,"VM"
	put global currLocVal into universal currentKRValue
	log universal currentKRValue
	if AdjustmentValue is universal data.AdjustmentNegativeValue then
		if universal currentKRValue  is greater than 0 then 
			LogSuccess "The KR value is Not Equals to the Zero proceed with the Negative qty  validation"
		else
			LogError"The KR value is Equals to Zero"
			exit All	
		end if
	end if
	smartUtil.validate"View All","Custompart"
	smartUtil.clickText"View All","Custompart"
	smartUtil.validate"Escalation","Custompart"
	wait 2
	smartUtil.clickText"Back","center"
	wait 2
	smartUtil.verifyAndEnterText"Adjustment",AdjustmentValue
	smartUtil.clickText"Reason","Custompart"
	smartUtil.clickText EscalationReason,"Custompart"
	put formattedTime("yyyy:MM:dd:HH:mm:ss") into universal plannerReason
	delete every occurrence of ":" in universal plannerReason
	put universal plannerReason  into universal data.plannerRemark 
	smartUtil.clickText "Planner Remarks","Custompart"
	smartUtil.verifyAndEnterText "Planner Remarks",universal plannerReason
	smartUtil.clickTextAtSpot"Manager Email",0,20
	smartUtil.textField ManagerEMail
	if checkBoxText is not empty
		smartUtil.clickText checkBoxText, "Custompart"
	end if
	smartUtil.clickText"Escalate","VerticalMiddle"
	wait 5
end escalationTabInPHV

to moveToImageandValidate image,section,expectation
	if ImageFound(image:image,searchRectangle:(screenPartition().SUT.(section)))
		--moveto image:image,searchRectangle:(screenPartition().SUT.(section))
		--smartUtil.validate expectation,section
		wait 2
		--smartUtil.validate image,section
		LogSuccess expectation&" Found in the Application"
	else
		LogError "The"&expectation &"is not Found in the Application"
	end if
end moveToImageandValidate

to handle switchToPlanning
	#Switching from the Planning to PO Rescheduling by clicking the Icon
	smartUtil.clickUsingImage"icons/appsIcon","TLQ"
	wait 3
	smartUtil.validate"Apps","TLQ"
	smartUtil.clickText"Planning","TLQ"
	##Validating the Supply Chain Collaboration - PO Rescheduling page
	if ImageFound(text:"Supply Chain Collaboration Portal - Planning",searchRectangle:(screenPartition().SUT.("THTH")))
		LogSuccess "The Application is in the  Planning"
	else
		LogError"The Application is not in the Planning"
		exit all
	end if
end switchToPlanning
to handle switchToPORS
	#Switching from the Planning to PO Rescheduling by clicking the Icon
	smartUtil.clickUsingImage"icons/appsIcon","TLQ"
	wait 3
	smartUtil.validate"Apps","TLQ"
	smartUtil.clickText"PO Rescheduling","TLQ"
	##Validating the Supply Chain Collaboration - PO Rescheduling page
	if ImageFound(text:"Supply Chain Collaboration - PO Rescheduling",searchRectangle:(screenPartition().SUT.("THTH")))
		LogSuccess "The Application is in the  PO Rescheduling Continue with the Validation"
	else
		LogError"The Application is not in the  PO Rescheduling"
		exit all
	end if
end switchToPORS


to selectPreferenceInPORS Menu,Options
	Repeat until ImageFound(text:Menu,searchRectangle:(screenPartition().SUT.("HM")))
		ScrollWheelDown 4
	End Repeat
	put FoundImageLocation() into MenuLoc
	Click FoundImageLocation()
	typetext Options,tab
	scrollWheelUp 10
end selectPreferenceInPORS

to errorValidationInConsole
	wait 3
	TypeText controlKey, shiftKey,J
	wait 3
	#Validating console page is opened
	smartUtil.validate "Console", "topRightQuadrant"
	smartUtil.screenShot
	# Verify the console tab for errors after clicking on a Purchase Order. If any errors are displayed, consider it as a test failure.
	smartUtil.clickTextAtSpot"Console",50,30,"TRQ"
	smartUtil.textField"Error"
	TypeText return
	wait 2
	smartUtil.clickTextAtSpot"Console",-100,80,"TRQ"
	set the RemoteClipboard = ""
	TypeText controlKey,a,c
	put  RemoteClipboard() into universal ConsoleMessage
	log universal ConsoleMessage
	if universal ConsoleMessage is empty
		LogSuccess "There is no error present in the console tab"
		smartUtil.screenShot
	else
		smartUtil.screenShot
		LogError "Encountered an error in the console"
	end if
	TypeText controlKey, shiftKey,i
	wait 3	
	#set search rectangle empty
	set the SearchRectangle to empty
	set universal ConsoleMessage to empty
	log universal ConsoleMessage
end errorValidationInConsole



to getTheTotalNumberOfItemsFromTheApplication
	typetext pageDown
	wait 5
	smartUtil.completeScreenLoad
	If  ImageFound(text:"Items",DPI:144,ignoreSpaces:On,ignorenewlines:On,searchRectangle:(screenPartition().SUT.("BH"))) then 
		Log "Items per page displayed in the UI"
	End If
	--set the TextStyle to { contrast:"On", contrastColor:"#F7F3F7", contrastTolerance:"45", dpi:"144"}
	set universal countOfValuesFromAppliaction to empty
	wait 5
	smartUtil.readTextUsingText "Items",100,-6,280,15,"BH"
	--log global currLocVal
	Split global currLocVal by "f"
	put item 2 of global currLocVal into universal countOfValuesFromAppliaction
	log universal countOfValuesFromAppliaction
	if universal countOfValuesFromAppliaction is empty then put "0" into universal countOfValuesFromAppliaction 
	--ScrollWheelUp 100
	TypeText pageUp
	LogSuccess "Total Number of Items in the Application:"&& universal countOfValuesFromAppliaction 
	set the TextStyle to empty
end getTheTotalNumberOfItemsFromTheApplication


